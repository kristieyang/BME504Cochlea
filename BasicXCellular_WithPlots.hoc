// Demonstration of extracellular stimulation
// Leo Medina 2013-10-28 

load_file("nrngui.hoc")
load_proc("nrnmainmenu")

create node[1]
objref nodes
vinit = -65        //initial potential

// initialize axon
proc buildaxon() {local k
    nnode = $1
    create node[nnode]
    nodes = new SectionList()
    forsec "node" nodes.append
    access node[0]
    for k = 0, nnode-2{
        connect node[k](1),node[k+1](0)
    }
    finitialize(vinit)
}
// axon physical properties
proc physprop(){
    forsec nodes{
        D = 1.4 //internodal length in µm
        diam = 0.7*D //µm
        l = 1 //µm
        L = 100*D //µm
        nseg = 15
        define_shape()
    }
}
// membrane properties
proc membprop(){
    
    forsec nodes{
        insert hh
        insert extracellular
        Rm = 1000
        rhoa = 100      // axial resistivity (ohm-cm)
        Ra = rhoa*((l+L)/l)
        cm = 2
    }
    
}


proc make(){
    buildaxon($1)
    physprop()
    membprop()
}

make(21)

//for keeping track of node positions and Ve at nodes
objref pos_nx, pos_ny, pos_nz
pos_nx = new Vector(nnode,0)
pos_ny = new Vector(nnode,0)
pos_nz = new Vector(nnode,0)

for i=0, nnode-1{
    print L
		pos_nx.set(i, l*(i+1)+i*L) // position vector of all the nodes
}
//pos_nx.mul(1e-3) //convert from um to mm

// for recording membrane potentials
objref vm[nnode]
for i=0, nnode-1{
	 vm[i] = new Vector(tstop/dt,0)
     vm[i].record(&node[i].v(0.5))
}

//dummy stimulus only to control waveform parameters
//The 'dummy' section has nothing to do with the fiber

// set electrode stim *****
AMP = -.05 //mA
DUR = 2
DEL = 4
//dt = 0.025
tstop = 20

// set electrode pos
rho = 500 //Ohm cm //ex_resistivity

XE = 1410  // µm
YE = 100  // µm
ZE = 0    // µm //Define electrode position

// end set electrode stim *****

objref dummystim
create dummy
dummy dummystim = new IClamp(0.5)	// 0.5 is the normalized location
dummystim.del = DEL
dummystim.dur = DUR
dummystim.amp = AMP

// extracellular potentials
objref phi_e
phi_e = new Vector(nnode,0)
proc potential_field(){
	for i=0, nnode-1{
        print pos_nx.get(i)
		r = sqrt((pos_nx.get(i) + 1410 - XE)^2 + (pos_ny.get(i) - YE)^2 + (pos_nz.get(i) - ZE)^2) //um. Note that we are assuming that the electrode is at position
        //print r
		phi_e.x[i] = dummystim.i * (rho / 4 / PI)*(1/r)*10^4 // mV
        node[i].e_extracellular(0.5) = phi_e.x[i]
	}
}

// time integrate with constant time step size
proc stimulate(){
	finitialize(vinit)
	while (t<tstop) {	
		potential_field()
	  fadvance()		
	}	
}

// ----------------------- Debugging -----------------------------------------
stimulate()
objref g
g = new Graph()
g.size(0,tstop,vinit-10,70)
vm[10].plot(g,dt)
vm[20].plot(g,dt,2,1)
