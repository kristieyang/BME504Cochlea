load_file("nrngui.hoc")
load_proc("nrnmainmenu")

create node[1], internode[1]
objref nodes, internodes

vinit = -65 //mV
// buildaxon creates an axon that has 21 compartments, 20 nodes

proc buildaxon() {local k
    nnode = $1
    create node[nnode], internode[nnode-1]
    nodes = new SectionList()
    internodes = new SectionList()
    forsec "internode" internodes.append
    forsec "node" nodes.append


    access node[0]
    for k = 0, nnode-2 {
        connect internode[k](0),node[k](1)
        connect node[k+1](0),internode[k](1)
    }
    
    forsec internodes {nseg = 10}

}

proc membprop(){

    forsec nodes {
        Ra = 100 //*
        cm = 2   //*
        L = 1.5 //µm
        insert hh
        insert extracellular {
            xg[0]=1e10
            xg[1]=1e10
            xc[0]=0
            xc[1]=0
            xraxial[0]=1e20
            xraxial[1]=1e20
            e_extracellular=0
        }
    }

    
    forsec internodes {
        insert pas
        g_pas = 0.0002
        e_pas = -70.0
        diam = 0.7*1.4  //Axon diameter, µm
        L = 100*1.4     //Internode length
        Ra = 100 //*
        cm = 0   //*
        insert extracellular {
            xg[0]=1e9
            xg[1]=1e9
            xc[0]=0
            xc[1]=0
            xraxial[0]=1e20
            xraxial[1]=1e20
            e_extracellular=0
        }
    }

}

// build the cell
proc make() {
    buildaxon($1)
    membprop()
}

make(21) //create 21 nodes and 20 internodes

//Create an intracellular stimulus
objectvar stim
node[10] stim = new IClamp(0.5)
stim.del = 1   //Apply stimulus immediately
stim.dur = .2    //Stimulus duration = 200 us
stim.amp = 10  //2*Vth to evoke AP (units of nA)

tstop = 20

objref p, vnodes, vinternodes
p = new Graph()
p.size(0,tstop,-90,100)
//p.label(0.3,0,"Time (ms)")
//p.label(0,0.5,"Current (mA/cm2)")
vnodes = new Vector()
vinternodes = new Vector()

vinternodes.record(&internode[10].v(.5))
vnodes.record(&node[10].v(.5))


run()
vnodes.plot(p,dt,3,2)
vinternodes.plot(p,dt,2,1)

objectvar rvp, g

rvp = new RangeVarPlot("v")
node[1] rvp.begin(0)
node[20] rvp.end(1)
g = new Graph()
g.addobject(rvp)
g.size(rvp.left(), rvp.right(),-90,50)

